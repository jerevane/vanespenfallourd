// Generated by dia2code
#ifndef INSTANCE__RULES__H
#define INSTANCE__RULES__H

#include <vector>

namespace state {
  class State;
  class Element;
}

namespace instance {

  /// class Rules - 
  class Rules {
    // Attributes
  protected:
    state::State* state;
    bool AICharNeeded;
    bool AIMonsterNeeded;
    std::vector<state::Element*> TurnList;
    // Operations
  public:
    Rules ();
    Rules (state::State* state, bool aichar, bool aimonster);
    ~Rules ();
    bool getAICharNeeded ();
    void setAICharNeeded (bool aicharneeded);
    bool getAIMonsterNeeded ();
    void setAIMonsterNeeded (bool aimonsterneeded);
    std::vector<state::Element*> getTurnList ();
    void setTurnList (std::vector<state::Element*> turnlist);
    void init ();
    void NextTurn ();
  };

};

#endif
