// Generated by dia2code
#ifndef INSTANCE__WORLDMAP__C
#define INSTANCE__WORLDMAP__C

#include <render/WorldmapRenderer.h>
#include <iostream>
#include "Worldmap.h"
#include "../state.hpp"

namespace instance {

    Worldmap::Worldmap(sf::RenderWindow* w, render::WorldmapRenderer* rd,
                       state::State* state, engine::Engine* engine) : Screen(w, state, engine), renderer(rd) {
    }

    Worldmap::~Worldmap() {}

    void Worldmap::init() {
        state->needScreenChange = false;
        renderer->initRender();

    }


    void Worldmap::eventHandler() {
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Down))
        {

        }
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Up))
        {

        }
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Left))
        {
            if (state->getNode()->getId() > 0) {
                renderer->renderNodeChange(renderer->tabNodeSprite.at((unsigned long) (state->getNode()->getId())),
                                           renderer->tabNodeSprite.at((unsigned long) (state->getNode()->getId() - 1)));
                engine::MoveInUI* cmd = new engine::MoveInUI(state);
                cmd->setState(state);
                //add to engine
                cmd->setChange(cmd->getState()->getNode()->getPreviousNode());
            }

        }
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Right))
        {
            if (state->getNode()->getId() < 8) {
                renderer->renderNodeChange(renderer->tabNodeSprite.at((unsigned long) (state->getNode()->getId())),
                                           renderer->tabNodeSprite.at((unsigned long) (state->getNode()->getId() + 1)));
                engine::MoveInUI* cmd = new engine::MoveInUI(state);
                cmd->setState(state);
                //add to engine
                cmd->setChange(cmd->getState()->getNode()->getNextNode());
            }



        }
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Return))
        {
            //TODO: Launch event
            //Switch case depending on node id, launch a different fight/event
            engine::MoveInUI* cmd = new engine::MoveInUI(state);
            cmd->setState(state);
            cmd->setScreenChange("fight");
        }
    }

    void Worldmap::setState(state::State *state) {
        this->state = state;
    }
};

#endif
