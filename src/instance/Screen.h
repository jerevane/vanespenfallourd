// Generated by dia2code
#ifndef INSTANCE__SCREEN__H
#define INSTANCE__SCREEN__H

#include "render/Renderer.h"
#include "SFML/Graphics.hpp"
#include "SFML/Audio.hpp"
#include <string>

namespace render {
  class Renderer;
};
namespace sf {
  class RenderWindow;
};
namespace state {
  class Element;
  class State;
}

#include "state/Element.h"
#include "state/State.h"

namespace instance {

  /// class Screen - Wrapper for all screen logic and display
  class Screen {
    // Attributes
  public:
    render::Renderer* renderer;
  protected:
    sf::RenderWindow* window;
    bool needScreenChange;
    sf::Event event;
    std::string nextScreen;
    // Operations
  public:
    Screen (sf::RenderWindow* rwindow, render::Renderer* renderer);
    virtual ~Screen ();
    virtual void init () = 0;
    virtual void eventHandler () = 0;
    std::string run ();
    void setNextScreen (std::string nScreen);
  };

};

#endif
