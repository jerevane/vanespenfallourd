// Generated by dia2code
#ifndef INSTANCE__SCREEN__H
#define INSTANCE__SCREEN__H

#include "SFML/Graphics.hpp"
#include "SFML/Audio.hpp"
#include <string>

namespace engine {
  class Engine;
};
namespace state {
  class State;
};
namespace instance {
  class UI;
};
namespace sf {
  class RenderWindow;
};
namespace render {
  class Renderer;
};
namespace state {
  class Element;
};
namespace engine {
  class Command;
  class MoveInUI;
  class Action;
}

#include "engine/Engine.h"
#include "state/Element.h"
#include "state/State.h"
#include "UI.h"
#include "engine/Command.h"
#include "engine/MoveInUI.h"
#include "engine/Action.h"
#include "render/Renderer.h"

namespace instance {

  /// class Screen - Wrapper for all screen logic and display
  class Screen {
    // Associations
    // Attributes
  public:
    engine::Engine* engine;
    state::State* state;
    UI* ui;
  protected:
    sf::RenderWindow* window;
    sf::Event event;
    // Operations
  public:
    Screen (sf::RenderWindow* rwindow, state::State* state, engine::Engine* engine);
    virtual ~Screen ();
    virtual void init () = 0;
    virtual void eventHandler () = 0;
    std::string run (render::Renderer* rd, state::State* state);
    void setNextScreen (std::string nScreen);
  };

};

#endif
