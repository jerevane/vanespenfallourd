// Generated by dia2code
#ifndef RENDER__WORLDMAPRENDERER__C
#define RENDER__WORLDMAPRENDERER__C

#include "WorldmapRenderer.h"
#include <vector>

namespace sf {
  class Text;
};
namespace render {
  class Renderer;


    WorldmapRenderer::WorldmapRenderer(sf::Font *font, sf::RenderWindow *rwindow) : Renderer(font, rwindow) {

        background.loadFromFile("../res/mapbackground.png");
        setBackground();
    }

    WorldmapRenderer::~WorldmapRenderer() {

    }

    void WorldmapRenderer::render() {

    }

    void WorldmapRenderer::setBackground() {
        spriteScreen.setTexture(background);

        spriteScreen.setOrigin((int)background.getSize().x/2, (int)background.getSize().y/2);
        spriteScreen.move(400, 300);
    }
    

    void WorldmapRenderer::initRender() {
        tmap.setFont(*font);
        tmap.setCharacterSize(80);
        tmap.setString("World Map");
        tmap.setPosition({ 400, 150 });
        tmap.setOrigin(tmap.getLocalBounds().width/2, tmap.getLocalBounds().height/2);
        

        tabNodeSprite.push_back(Midgare);
        tabNodeSprite.push_back(Nibelheim);
        tabNodeSprite.push_back(Besaid);
        tabNodeSprite.push_back(Gagazet);
        tabNodeSprite.push_back(Winhill);
        tabNodeSprite.push_back(Terra);
        tabNodeSprite.push_back(Kilika);
        tabNodeSprite.push_back(Lindblum);
        tabNodeSprite.push_back(Zanarkand);
        tabNodeSprite.push_back(BITE);

        for(size_t i=0;i<10;i++){
            tabNodeSprite.at(i)->setPosition({tabNodeSprite.at(i)->getPositionX(), tabNodeSprite.at(i)->getPositionY()});
        }
    }

    void WorldmapRenderer::renderNodes(std::vector<sf::Sprite *> tabNodeSprite) {

    }


}

#include "Renderer.h"

namespace render {


};

#endif
