// Generated by dia2code
#ifndef AI__CHOICELIST__H
#define AI__CHOICELIST__H

#include <vector>
#include <map>

namespace state {
  class Element;
};
namespace engine {
  class Engine;
}

#include "state/Element.h"

namespace ai {

  /// class ChoiceList - 
  class ChoiceList {
    // Attributes
  protected:
    std::vector<int> allAction;
    std::vector<state::Element*> allyTarget;
    std::vector<state::Element*> ennemyTarget;
    state::Element* player;
    // Operations
  public:
    ChoiceList ();
    ~ChoiceList ();
    ChoiceList (engine::Engine* engine);
    std::multimap<int,state::Element*> getRandomChoicePossibilities ();
    std::multimap<int,state::Element*> getRandomGoodChoicePossibilities ();
    float getWeightOnOneAction (std::multimap<int,state::Element*> action_target_map);
    float getWeightMaxMin (std::map<int,float> list_action_weight, bool maxormin);
  };

};

#endif
